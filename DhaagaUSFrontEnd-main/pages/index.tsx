import { useContext, useEffect, useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import { useErrorBoundary } from "react-error-boundary";
import TopSection from "@/components/landing-page/TopSection";
import TargetAudienceSection from "@/components/landing-page/TargetAudienceSection";
import BusinessUsersFeaturesSection from "@/components/landing-page/BusinessUsersFeaturesSection";
import UsersFeaturesSection from "@/components/landing-page/UsersFeaturesSection";
import ProductsAndServicesSetion from "@/components/landing-page/ProductsAndServicesSection";
import CommunitySection from "@/components/landing-page/CommunitySection";
import FooterSection from "@/components/landing-page/FooterSection";
import AuthFormModal from "@/components/ModalOverlay/AuthFormModal";
import { useAuth } from "react-oidc-context";

export default function Home() {
  const [modalShow, setModalShow] = useState(false);
  const [mode, setMode] = useState<{ login: boolean; signUp: boolean }>({
    login: false,
    signUp: false,
  });

  const {user, isAuthenticated, signinRedirect, isLoading} = useAuth();

  const router = useRouter();

  useEffect(() => {
    async function login(){
      try{
        await signinRedirect();
      } catch(err) {
        console.log('unable to sign in, check oidc settings!')
        console.log(err);
      }
    }

   if(isAuthenticated){
      router.push("/home");
    } else if(!isLoading) {            
      login();      
    }
  }, [user, isAuthenticated, isLoading, signinRedirect]);

  useEffect(() => {
    if (router.query.mode === "login") {
      setModalShow(true);
      setMode({ login: true, signUp: false });
    }
  }, [router.query.mode]);

  return (
    <>
      <Head>
        <title>Dhaga - Connecting Desis</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>      
      <AuthFormModal
        show={modalShow}
        mode={mode}
        onHide={() => {
          setModalShow(false);
          setMode({ login: false, signUp: false });
        }}
        changeMode={(login: boolean) => {
          if (login === true) {
            setMode({ login: true, signUp: false });
          } else {
            setMode({ login: false, signUp: true });
          }
        }}
      />
      <TopSection
        onShow={(login: boolean) => {
          setModalShow(true);
          if (login === true) {
            setMode({ login: true, signUp: false });
          } else {
            setMode({ login: false, signUp: true });
          }
        }}
      />
      <TargetAudienceSection />
      <BusinessUsersFeaturesSection
        onShow={() => {
          setModalShow(true);
          setMode({ login: false, signUp: true });
        }}
      />
      <UsersFeaturesSection
        onShow={() => {
          setModalShow(true);
          setMode({ login: false, signUp: true });
        }}
      />
      <ProductsAndServicesSetion />
      <CommunitySection />
      <FooterSection />
    </>
  );
}
